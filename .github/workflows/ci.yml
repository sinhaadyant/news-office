name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Lint and Type Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Check Prettier formatting
        run: npx prettier --check .

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info

  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: [lint-and-typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: .next/

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

  lighthouse:
    runs-on: ubuntu-latest
    name: Lighthouse Performance Audit
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: .next/

      - name: Build and start application
        run: |
          npm run build
          npm start &
          sleep 30

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            http://localhost:3000
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy Preview
    needs: [lint-and-typecheck, test, build]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to preview environment
        run: |
          echo "Deploying preview for PR #${{ github.event.number }}"
          # Add your deployment commands here
          # Example: Deploy to Vercel, Netlify, or your preferred platform

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: [lint-and-typecheck, test, build, lighthouse]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Add your production deployment commands here
          # Example: Deploy to Vercel, Netlify, AWS, or your preferred platform

  notify:
    runs-on: ubuntu-latest
    name: Notify Team
    needs: [deploy-production, deploy-preview]
    if: always()
    steps:
      - name: Notify on success
        if: ${{ needs.deploy-production.result == 'success' || needs.deploy-preview.result == 'success' }}
        run: |
          echo "✅ Deployment successful!"
          # Add notification logic here (Slack, Discord, email, etc.)

      - name: Notify on failure
        if: ${{ needs.deploy-production.result == 'failure' || needs.deploy-preview.result == 'failure' }}
        run: |
          echo "❌ Deployment failed!"
          # Add failure notification logic here
